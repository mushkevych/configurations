<?xml version="1.0"?>
<!--
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
  -->
    <?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
      <configuration>
	<property>
	  <name>mapreduce.map.output.compress</name> 
	  <value>true</value>
	</property>
	<property>
	  <name>mapred.map.output.compress.codec</name> 
	  <value>org.apache.hadoop.io.compress.SnappyCodec</value>
	</property>
	<property>
	  <name>mapreduce.framework.name</name>
	  <value>yarn</value>
	</property>
	<property>
	  <name>mapreduce.shuffle.port</name>
	  <value>8998</value>
	  <description>Port that the ShuffleHandler will run on. ShuffleHandler is a service run at the NodeManager to facilitate transfers of intermediate Map outputs to requesting Reducers.</description>
	</property>	
	<property> 
	  <name>mapreduce.clientfactory.class.name</name> 
	  <value>org.apache.hadoop.mapred.YarnClientFactory</value> 
	</property> 	
	
	<!-- $HOST_ADDRESS stands for fully qualified host name, such as PC-1107.mycompany.com -->
	<property>
	  <name>mapreduce.jobhistory.address</name>
	  <value>$HOST_ADDRESS:10020</value>
	</property>
	<property>
	  <name>mapreduce.jobhistory.webapp.address</name>
	  <value>$HOST_ADDRESS:19888</value>
	</property>
<!--
	<property>
	  <name>yarn.app.mapreduce.am.resource.mb</name>
	  <value>1024</value>
	  <description>The amount of memory the MR AppMaster needs.
	  </description>
	</property>
	-->	
	
	<property>
	  <name>mapreduce.reduce.memory.mb</name>
	  <value>2048</value>
	  <description>Per-job property of the maximum amount of memory each reduce task can consume, in MB. Set to -1 for no limit (default). 
	  </description>
	</property>
	<property>
	  <name>mapreduce.reduce.java.opts</name>
	  <value>-Xmx1536M</value>
	  <description>Larger heap-size for child jvms of reduces.
	  </description>
	</property>
	<property>
	  <name>mapreduce.job.jvm.numtasks</name>
	  <value>1</value>
	  <description>How many tasks to run per jvm. If set to -1, there is no limit. 
	  </description>
	</property>
	<property>
	  <name>mapreduce.map.speculative</name>
	  <value>false</value>
	  <final>true</final>
	  <description>If true, then multiple instances of some map tasks may be executed in parallel.
	  </description>
	</property>
	<property>
	  <name>mapreduce.reduce.speculative</name>
	  <value>false</value>
	  <final>true</final>
	  <description>If true, then multiple instances of some reduce tasks 
	    may be executed in parallel.
	  </description>
	</property>
<!--
	<property>
	  <name>mapred.child.java.opts</name>
	  <value>-Xmx512m</value>
	  <description>Java opts for the task tracker child processes.  
	    The following symbol, if present, will be interpolated: @taskid@ is replaced 
	    by current TaskID. Any other occurrences of '@' will go unchanged.
	    For example, to enable verbose gc logging to a file named for the taskid in
	    /tmp and to set the heap maximum to be a gigabyte, pass a 'value' of:
	    -Xmx1024m -verbose:gc -Xloggc:/tmp/@taskid@.gc
	    Usage of -Djava.library.path can cause programs to no longer function if
	    hadoop native libraries are used. These values should instead be set as part 
	    of LD_LIBRARY_PATH in the map / reduce JVM env using the mapreduce.map.env and 
	    mapreduce.reduce.env config settings. 
	  </description>
	</property>
	-->

	<!-- $FS_MOUNT_POINT stands for fully qualified Linux filesystem path 
	to the mount point where Hadoop folders and structures reside.
	For instance: /media/_media_1TB -->	
	<property>
	  <description>To set the value of tmp directory for map and reduce tasks.</description>
	  <name>mapreduce.task.tmp.dir</name>
	  <value>$FS_MOUNT_POINT/hadoop_tmp/${user.name}/tasks</value>
	</property>
      </configuration>
